@model Website.ViewModels.Base.ConfirmMailViewModel
@{
    Layout = null;
    string title = "Регистрация";
    string redirectUrl = "/auth";
    string redirectDescription = "Авторизация";

    if (Model.IsAuth.Value)
    {
        title = "Авторизация";
        redirectUrl = "/reg";
        redirectDescription = "Регистрация";
    }
}
<link rel="stylesheet" href="~/Resources/css/auth.css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Nunito:wght@600&display=swap">

<div class="center-screen auth">
    <h3>@title</h3>
    <form class="auth-form" asp-anti-forgery="true">
        <input type="hidden" asp-for="IsAuth" />
        <div class="auth-row">
            <input id="MailAddress" autocomplete="off" onkeyup="IsInputEmpty()" class="auth-input" placeholder="Почта" type="text" asp-for="MailAddress" />
            <div asp-validation-summary="All"></div>
            @*<div asp-validation-summary="ModelOnly" class="validation-summary-errors">
                    <ul>
                        <li class="auth-error">Неверная почта</li>
                    </ul>
                </div>*@
        </div>
        <div class="auth-row">
            <input id="sumbit" class="auth-btn pointer" disabled onmousemove="IsDisabled()" onmouseleave="HideError()" type="submit" value="Продолжить" />
            <span id="submit-error" class="auth-error rightOf">Введите почту</span>
        </div>
    </form>
    <div style="position: relative">
        <a href="@redirectUrl">@redirectDescription</a>
    </div>
</div>
<script>
    let inputHasError = false;
    let inputValidationList = document.getElementsByClassName('validation-summary-errors')[0];
    document.addEventListener("DOMContentLoaded", function (event) {
        if (inputValidationList != undefined)
            if (inputValidationList.hasChildNodes)
                if (inputValidationList.children[0].hasChildNodes) {
                    inputHasError = true;
                    let inputError = inputValidationList.children[0].children[0];
                    inputError.className = "auth-error";
                    setTimeout(function () {
                        AddShowClass(inputError);
                    }, 500);
                }
    });

    let submitBtn = document.getElementById('sumbit');
    function IsInputEmpty() {
        let input = document.getElementById('MailAddress');

        if (input.value == "") {
            submitBtn.setAttribute("disabled", "");
        }
        else {
            HideError();
            submitBtn.removeAttribute("disabled");
        }
        if (inputHasError) {
            let inputError = inputValidationList.children[0].children[0];
            RemoveVisibleClass(inputError);
            inputHasError = false;
        }
    }
    IsInputEmpty();
    function IsDisabled() {
        if (!submitBtn.hasAttribute("disabled")) {
            HideError();
            return;
        }
        ShowError();
    }
    function ShowError() {
        if (!submitBtn.hasAttribute("disabled")) {
            HideError();
            return;
        }
        setTimeout(function () {
            let submitError = document.getElementById('submit-error');
            AddShowClass(submitError);
        }, 150);
    }
    function HideError() {
        setTimeout(function () {
            let submitError = document.getElementById('submit-error');
            let className = submitError.classList[0];
            let visibleClassName = className + "-visible";
            if (submitError.classList.contains(visibleClassName))
                submitError.classList.remove(visibleClassName);
        }, 150);
    }
    function AddShowClass(element) {
        let className = element.classList[0];
        let visibleClassName = className + "-visible";
        if (!element.classList.contains(visibleClassName))
            element.classList.add(visibleClassName);
    }
    function RemoveVisibleClass(element) {
        let className = element.classList[0];
        let visibleClassName = className + "-visible";
        if (element.classList.contains(visibleClassName))
            element.classList.remove(visibleClassName);
    }
</script>
@*<script src="~/Resources/lib/jquery/dist/jquery.min.js"></script>*@
@*<script>
            function ConfirmMail() {
                var url = "@Url.Action("ConfirmMail", "Authenticate")";
                $.ajax({
                    url: url,
                    type: "POST",
                    data: $('#auth-form').serializeArray(),
                    success: function(view) {
                        //var authBlock = document.getElementById('te');
                        //authBlock.append(view);
                        document.body.innerHTML = view;
                    }
                });
            };


        <script>
            function ConfirmPassword() {
                var url = "@Url.Action("EnterPassword", "Authenticate")";
                $.ajax({
                    url: url,
                    type: "POST",
                    data: $('#auth-form').serializeArray(),
                    success: function (view) {
                        document.body.innerHTML = view;
                    }
                });
            };
        </script>
    </script>*@
@if (!Model.IsAuth.Value)
{
    <script>
        $('#mailInput').on('keyup',
            function () {
                var url = "@Url.Action("IsMailExist","Authenticate")";
                var mail = document.getElementById('mailInput').value;
                $.ajax({
                    url: url,
                    type: "POST",
                    data: {
                        "mailAddress": mail
                    },
                    success:
                        function(result) {
                            var warn = document.getElementById('mailAccess');
                            if (mail == "") {
                                warn.textContent = "";
                                return;
                            }
                            if (result) warn.textContent='Занят';
                            else warn.textContent='Свободен';
                        }
                });
            });
    </script>
}