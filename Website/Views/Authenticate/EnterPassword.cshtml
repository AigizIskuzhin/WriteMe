@model Website.ViewModels.AuthorizationViewModel
@{
    Layout = null;
    string style = "";
}
<link rel="stylesheet" href="~/Resources/css/auth.css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Nunito:wght@600&display=swap">

<div class="center-screen auth">
    <form class="auth-form" asp-action="EnterPassword" asp-anti-forgery="true">
        <h3>Авторизация</h3>
        <input type="hidden" asp-for="MailAddress" />
        <div class="auth-row">
            <div class="auth-user auth-input leftOf" is-hidden="true" onmouseleavse="HideTitle()" onclics="ChangeTitleVisibleState(), Clicked(this)" onmousemovse="CheckTitleVisibleState()"
                 @if (Model.UserTitleBlockWidth > 40) { style = "style=width:" + Model.UserTitleBlockWidth; } @style>
                <svg class="auth-user-logo" xmlns="http://www.w3.org/2000/svg" viewBox="0 16 128 128"><path d="M 64 37 A 23 23 0 0 0 64 83 A 23 23 0 0 0 64 37 z M 64 91 C 49 91 34.9 98.399219 26.5 110.69922 C 24.8 113.19922 24 116.09961 24 119.09961 C 24 120.69961 25.4 122 27 122 L 101 122 C 102.6 122 104 120.69961 104 119.09961 C 104.1 116.09961 103.2 113.09922 101.5 110.69922 C 93.1 98.399219 79 91 64 91 z"></path></svg>
                <div class="auth-user-title">
                    @Model.UserTitle
                </div>
                <input type="hidden" asp-for="UserTitle" />
                <input id="UserTitleBlockWidth" type="hidden" asp-for="UserTitleBlockWidth" />
            </div>
            <input id="Password" autocomplete="off" onkeydown="IsInputEmpty(this)" onkeyup="IsInputEmpty(this)" class="auth-input" placeholder="Пароль" type="password" asp-for="Password" value="" />
            <span asp-validation-for="Password"></span>
            @*<div asp-validation-summary="ModelOnly" class="auth-validation-list rightOf">
                <ul>
                    <li class="auth-error">Неверная почта</li>
                </ul>
            </div>*@
        </div>
        <div class="auth-row">
            <input id="submit" class="auth-btn pointer" disabled onfocus="HideError(this)" onmousemove="ShowError(this)" onmouseleave="HideError(this)" type="submit" value="Войти" />
            <span class="field-validation-error rightOf submit-error">Введите пароль</span>
        </div>
        @*<div class="auth-row">
            <div class="auth-btn pointer" onclick="testF()">
                <svg xmlns="http://www.w3.org/2000/svg" style="height: 26px; fill: white; pointer-events: none" viewBox="0 0 24 24">    <path d="M 12 4 C 4 4 1 12 1 12 C 1 12 4 20 12 20 C 20 20 23 12 23 12 C 23 12 20 4 12 4 z M 12 6 C 17.276 6 19.944594 10.267094 20.808594 11.996094 C 19.943594 13.713094 17.255 18 12 18 C 6.724 18 4.0554062 13.732906 3.1914062 12.003906 C 4.0574062 10.286906 6.745 6 12 6 z M 12 8 C 9.791 8 8 9.791 8 12 C 8 14.209 9.791 16 12 16 C 14.209 16 16 14.209 16 12 C 16 9.791 14.209 8 12 8 z M 12 10 C 13.105 10 14 10.895 14 12 C 14 13.105 13.105 14 12 14 C 10.895 14 10 13.105 10 12 C 10 10.895 10.895 10 12 10 z"></path></svg>
            </div>
        </div>*@
    </form>
</div>

<script>
    function testF() {
        let input = document.getElementById('Password');
        if (input.type == "password")
            input.type = "text";
        else input.type = "password";

    }
        function GetAuthUserWidth(titleWidth) {
            return 40 + titleWidth + 8;
        }
        let authUser = document.getElementsByClassName('auth-user')[0];
        let userTitle = document.getElementsByClassName('auth-user-title')[0];
        document.getElementById('UserTitleBlockWidth').value = GetAuthUserWidth(userTitle.scrollWidth);
        authUser.style.width = GetAuthUserWidth(userTitle.scrollWidth);

        let inputHasError = false;
        let inputErrors = document.getElementsByClassName('field-validation-error');
        document.addEventListener("DOMContentLoaded",
            function (event) {
                if (inputErrors.length != 0) {
                    for (let inputError of inputErrors) {

                        if (!inputError.classList.contains('submit-error'))
                            setTimeout(function () {
                                    if (inputError.value != "") {
                                        inputHasError = true;
                                    }
                                    AddVisibleClass(inputError);
                                },
                                500);
                    }
                }
            });

        function IsSubmitError(inputError) {
            for (let item of inputError.parentElement.children) {
                if (item.classList.contains("auth-btn"))
                    return true;
            }
            return false;
        }

    let submitBtn = document.getElementById('submit');

        function IsInputEmpty(input) {
            let inputError;
            for (let item of input.parentElement.children)
                if (item.classList.contains("field-validation-error"))
                    inputError = item;
            if(inputError!=null)
                if (inputError.value != "")
                    AddVisibleClass(inputError);
            if (input.value == "") {
                submitBtn.disabled = true;
            } else {
                inputHasError = false;
                HideError(input);
                submitBtn.disabled = false;
                HideError(submitBtn);
                //inputError.value = "";
            }
        }

        function ShowError(input) {
            if (!input.disabled) {
                HideError(input);
                return;
            }
            for (let item of input.parentElement.children) {
                if (item.classList.contains("field-validation-error"))
                    if (item.value != "") {

                        if (inputHasError)
                            item.innerText = "Исправьте пароль";
                        else item.innerText = "Введите пароль";
                        setTimeout(function () {
                                AddVisibleClass(item);
                            },
                            150);
                    }
            }

        }

        function HideError(input) {
            setTimeout(function () {
                for (let item of input.parentElement.children)
                    if (item.classList.contains("field-validation-error")) {
                        if (item.value != "") {
                            if (!item.classList.contains("submit-error"))
                                item.value = "";
                            RemoveVisibleClass(item);
                        }
                    }
            }, 150);
        }

        function AddVisibleClass(element) {
            let className = element.classList[0];
            let visibleClassName = className + "-visible";
            if (!element.hasAttribute("style"))
                element.setAttribute("style", "width: " + element.scrollWidth + "px;");
        }

        function RemoveVisibleClass(element) {
            let className = element.classList[0];
            let visibleClassName = className + "-visible";
            if (element.hasAttribute("style"))
                element.removeAttribute("style");
        }
    </script>

@*<script>
    let inputHasError = false;
    let inputValidationList = document.getElementsByClassName('validation-summary-errors')[0];
    document.addEventListener("DOMContentLoaded", function (event) {
        if (inputValidationList != undefined)
            if (inputValidationList.hasChildNodes)
                if (inputValidationList.children[0].hasChildNodes) {
                    inputHasError = true;
                    let inputError = inputValidationList.children[0].children[0];
                    inputError.className = "auth-error";
                    setTimeout(function () {
                        AddVisibleClass(inputError);
                    }, 500);
                }
    });

    let submitBtn = document.getElementById('sumbit');
    function IsInputEmpty() {
        let input = document.getElementById('Password');

        if (input.value == "") {
            submitBtn.setAttribute("disabled", "");
        }
        else {
            HideError();
            submitBtn.removeAttribute("disabled");
        }
        if (inputHasError) {
            let inputError = inputValidationList.children[0].children[0];
            RemoveVisibleClass(inputError);
            inputHasError = false;
        }
    }
    IsInputEmpty();
    function IsDisabled() {
        if (!submitBtn.hasAttribute("disabled")) {
            HideError();
            return;
        }
        ShowError();
    }
    function ShowError() {
        if (!submitBtn.hasAttribute("disabled")) {
            HideError();
            return;
        }
        setTimeout(function () {
            let submitError = document.getElementById('submit-error');
            AddVisibleClass(submitError);
        }, 150);
    }
    function HideError() {
        setTimeout(function () {
            let submitError = document.getElementById('submit-error');
            let className = submitError.classList[0];
            let visibleClassName = className + "-visible";
            if (submitError.classList.contains(visibleClassName))
                submitError.classList.remove(visibleClassName);
        }, 150);
    }
    function AddVisibleClass(element) {
        let className = element.classList[0];
        let visibleClassName = className + "-visible";
        if (!element.classList.contains(visibleClassName))
            element.classList.add(visibleClassName);
    }
    function RemoveVisibleClass(element) {
        let className = element.classList[0];
        let visibleClassName = className + "-visible";
        if (element.classList.contains(visibleClassName))
            element.classList.remove(visibleClassName);
    }
    function ChangeTitleVisibleState() {
        let authUser = document.getElementsByClassName('auth-user')[0];
        let titleVisibleState = authUser.getAttribute('is-hidden');

        if (titleVisibleState == "true") {
            authUser.setAttribute('is-hidden', false);
        }
        else {
            authUser.setAttribute('is-hidden', true);
        }
    }
    function CheckTitleVisibleState() {
        let authUser = document.getElementsByClassName('auth-user')[0];
        let titleVisibleState = authUser.getAttribute('is-hidden');

        let userTitle = document.getElementsByClassName('auth-user-title')[0];
        let className = userTitle.classList[0];
        let hiddenClassName = className + "-hidden";

        let titleWidth = userTitle.scrollWidth;
        let userTitleBlockWidth = document.getElementById('UserTitleBlockWidth');
        userTitleBlockWidth.value = GetAuthUserWidth(titleWidth);
        authUser.style.width = GetAuthUserWidth(titleWidth);
        if (userTitle.classList.contains(hiddenClassName))
            userTitle.classList.remove(hiddenClassName);
    }
    function HideTitle() {
        let authUser = document.getElementsByClassName('auth-user')[0];
        let isTitleHidden = authUser.getAttribute('is-hidden');

        let userTitle = document.getElementsByClassName('auth-user-title')[0];
        let className = userTitle.classList[0];
        let hiddenClassName = className + "-hidden";
        if (isTitleHidden == "true") {
            authUser.removeAttribute('style');
            if (!userTitle.classList.contains(hiddenClassName))
                userTitle.classList.add(hiddenClassName);
        }
    }
    function Clicked(btn) {
        let className = btn.classList[0];
        let clickedClassName = className + '-clicked';
        if (!btn.classList.contains(clickedClassName))
            btn.classList.add(clickedClassName);
        else {
            btn.classList.remove(clickedClassName);
            Clicked(btn);
        }
        setTimeout(function () {

            btn.classList.remove(clickedClassName);
        },
            200);
    }
    function GetAuthUserWidth(titleWidth) {
        return 40 + titleWidth + 8;
    }
    CheckTitleVisibleState();
</script>*@