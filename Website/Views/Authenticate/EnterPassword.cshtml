@model Website.ViewModels.AuthorizationViewModel
@{
    Layout = null;
    string style = "";
}
<link rel="stylesheet" href="~/Resources/css/auth.css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Nunito:wght@600&display=swap"> 
    
<div class="center-screen auth">
    <h3>Авторизация</h3>
    <form class="auth-form" asp-action="EnterPassword" asp-anti-forgery="true">
        <input type="hidden" asp-for="MailAddress" />
        <div class="auth-row">
            <div class="auth-user auth-input leftOf" is-hidden="true"onmouseleavse="HideTitle()" onclics="ChangeTitleVisibleState(), Clicked(this)" onmousemovse="CheckTitleVisibleState()"
                 @if (Model.UserTitleBlockWidth>40)
                 {
                     style = "style=width:" + Model.UserTitleBlockWidth;
                 } @style>
                <svg class="auth-user-logo" xmlns="http://www.w3.org/2000/svg" viewBox="0 16 128 128"><path d="M 64 37 A 23 23 0 0 0 64 83 A 23 23 0 0 0 64 37 z M 64 91 C 49 91 34.9 98.399219 26.5 110.69922 C 24.8 113.19922 24 116.09961 24 119.09961 C 24 120.69961 25.4 122 27 122 L 101 122 C 102.6 122 104 120.69961 104 119.09961 C 104.1 116.09961 103.2 113.09922 101.5 110.69922 C 93.1 98.399219 79 91 64 91 z"></path></svg>
                <div class="auth-user-title auth-user-title-hidden">
                    @Model.UserTitle
                </div>
                <input type="hidden" asp-for="UserTitle"/>
                <input id="UserTitleBlockWidth" type="hidden" asp-for="UserTitleBlockWidth"/>
            </div>
            <input id="Password" autocomplete="off" onkeyup="IsInputEmpty()" class="auth-input" placeholder="Пароль" type="text" asp-for="Password" value=""/>
            <div asp-validation-summary="All"></div>
            @*<div asp-validation-summary="ModelOnly" class="auth-validation-list rightOf">
                    <ul>
                        <li class="auth-error">Неверная почта</li>
                    </ul>
                </div>*@
        </div>
        <div class="auth-row">
            <input id="sumbit" class="auth-btn pointer" disabled onmousemove="IsDisabled()" onmouseleave="HideError()" type="submit" value="Войти"/>
            <span id="submit-error" class="auth-error rightOf">Введите пароль</span>
        </div>
    </form>
</div>
<script>
    let inputHasError = false;
    let inputValidationList = document.getElementsByClassName('validation-summary-errors')[0];
    document.addEventListener("DOMContentLoaded", function (event) {
        if (inputValidationList != undefined)
            if (inputValidationList.hasChildNodes)
                if (inputValidationList.children[0].hasChildNodes) {
                    inputHasError = true;
                    let inputError = inputValidationList.children[0].children[0];
                    inputError.className = "auth-error";
                    setTimeout(function () {
                        AddShowClass(inputError);
                    }, 500);
                }
    });

    let submitBtn = document.getElementById('sumbit');
    function IsInputEmpty() {
        let input = document.getElementById('Password');

        if (input.value == "") {
            submitBtn.setAttribute("disabled", "");
        }
        else {
            HideError();
            submitBtn.removeAttribute("disabled");
        }
        if (inputHasError) {
            let inputError = inputValidationList.children[0].children[0];
            RemoveVisibleClass(inputError);
            inputHasError = false;
        }
    }
    IsInputEmpty();
    function IsDisabled() {
        if (!submitBtn.hasAttribute("disabled")) {
            HideError();
            return;
        }
        ShowError();
    }
    function ShowError() {
        if (!submitBtn.hasAttribute("disabled")) {
            HideError();
            return;
        }
        setTimeout(function () {
            let submitError = document.getElementById('submit-error');
            AddShowClass(submitError);
        }, 150);
    }
    function HideError() {
        setTimeout(function () {
            let submitError = document.getElementById('submit-error');
            let className = submitError.classList[0];
            let visibleClassName = className + "-visible";
            if (submitError.classList.contains(visibleClassName))
                submitError.classList.remove(visibleClassName);
        }, 150);
    }
    function AddShowClass(element) {
        let className = element.classList[0];
        let visibleClassName = className + "-visible";
        if (!element.classList.contains(visibleClassName))
            element.classList.add(visibleClassName);
    }
    function RemoveVisibleClass(element) {
        let className = element.classList[0];
        let visibleClassName = className + "-visible";
        if (element.classList.contains(visibleClassName))
            element.classList.remove(visibleClassName);
    }
    function ChangeTitleVisibleState() {
        let authUser = document.getElementsByClassName('auth-user')[0];
        let titleVisibleState = authUser.getAttribute('is-hidden');

        if (titleVisibleState == "true") {
            authUser.setAttribute('is-hidden', false);
        }
        else {
            authUser.setAttribute('is-hidden', true);
        }
    }
    function CheckTitleVisibleState() {
        let authUser = document.getElementsByClassName('auth-user')[0];
        let titleVisibleState = authUser.getAttribute('is-hidden');

        let userTitle = document.getElementsByClassName('auth-user-title')[0];
        let className = userTitle.classList[0];
        let hiddenClassName = className + "-hidden";
        
        let titleWidth = userTitle.scrollWidth;
        let userTitleBlockWidth = document.getElementById('UserTitleBlockWidth');
        userTitleBlockWidth.value = GetAuthUserWidth(titleWidth);
        authUser.style.width = GetAuthUserWidth(titleWidth);
        if (userTitle.classList.contains(hiddenClassName))
            userTitle.classList.remove(hiddenClassName);
    }
    function HideTitle() {
        let authUser = document.getElementsByClassName('auth-user')[0];
        let isTitleHidden = authUser.getAttribute('is-hidden');

        let userTitle = document.getElementsByClassName('auth-user-title')[0];
        let className = userTitle.classList[0];
        let hiddenClassName = className + "-hidden";
        if (isTitleHidden == "true") {
            authUser.removeAttribute('style');
            if (!userTitle.classList.contains(hiddenClassName))
                userTitle.classList.add(hiddenClassName);
        }
    }
    function GetAuthUserWidth(titleWidth){
        return 40 + titleWidth + 8;
    }
    function Clicked(btn) {
        let className = btn.classList[0];
        let clickedClassName = className + '-clicked';
        if (!btn.classList.contains(clickedClassName))
            btn.classList.add(clickedClassName);
        else {
            btn.classList.remove(clickedClassName);
            Clicked(btn);
        }
        setTimeout(function() {

                btn.classList.remove(clickedClassName);
            },
            200);
    }
    CheckTitleVisibleState();
</script>