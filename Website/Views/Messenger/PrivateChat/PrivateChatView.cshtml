@model Website.ViewModels.Messenger.ChatViewModel
@{
    Layout = null;
    string online = Model.IsReceiverOnline ? "online" : string.Empty;
    string status = Model.IsReceiverOnline ? "В сети" : "Не в сети";
}
<div class="ui_header">
    <a href="/profile?id=@Model.ReceiverId" class="chat_private_header">
        <div class="chat_icon_container">

            @if (string.IsNullOrEmpty(Model.ReceiverAvatarPath))
            {
                <svg class="chat_icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30">
                    <path d="M 15 3 C 11.686 3 9 5.686 9 9 L 9 10 C 9 13.314 11.686 16 15 16 C 18.314 16 21 13.314 21 10 L 21 9 C 21 5.686 18.314 3 15 3 z M 14.998047 19 C 10.992047 19 5.8520469 21.166844 4.3730469 23.089844 C 3.4590469 24.278844 4.329125 26 5.828125 26 L 24.169922 26 C 25.668922 26 26.539 24.278844 25.625 23.089844 C 24.146 21.167844 19.004047 19 14.998047 19 z">
                    </path>
                </svg>
            }
            else
            {
                <img class="chat_icon" src="@Model.ReceiverAvatarPath" />
            }
        </div>
        <span class="chat_receiver">
            @Model.ReceiverName
        </span>
    </a>
    <span id="receiver_status" class="user_status @online">
        @status
    </span>
</div>
<ul id="history" class="history">
    @{
        await Html.RenderPartialAsync("PrivateChat/PrivateChatHistoryView", Model, ViewData);
    }
</ul>